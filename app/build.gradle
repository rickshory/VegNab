apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

androidExtensions {
    experimental = true
}

android {
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.rickshory.vegnab"
        minSdkVersion 17
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Room components
    implementation 'androidx.room:room-runtime:2.0.0'
    annotationProcessor 'androidx.room:room-compiler:2.0.0'
    implementation "android.arch.persistence.room:runtime:$rootProject.roomVersion" // no longer needed?
    kapt "android.arch.persistence.room:compiler:$rootProject.roomVersion" // no longer needed?
    androidTestImplementation "android.arch.persistence.room:testing:$rootProject.roomVersion"

    // Android Jet Pack Libraries
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha04'
    implementation 'androidx.core:core-ktx:1.1.0-alpha05'
    implementation 'com.google.android.material:material:1.1.0-alpha05'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'

    // Lifecycle components
    implementation "android.arch.lifecycle:extensions:$rootProject.archLifecycleVersion"
    kapt "android.arch.lifecycle:compiler:$rootProject.archLifecycleVersion"
    implementation "android.arch.lifecycle:extensions:$lifecycle_version" // dup?
    implementation "android.arch.lifecycle:common-java8:$lifecycle_version"

    // Coroutines
//    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.coroutines"
//    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.coroutines"

//    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.coroutines"
//    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.coroutines"

    //update core version
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.2.0"
//add coroutines for Android
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.2.0"

//    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.2.0'

    // Test Libraries
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0-alpha04'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0-alpha04'

    // Dependancy Injection
    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-core:$koin_version"
    implementation "org.koin:koin-android-architecture:$koin_version"

}

//kotlin {
//    experimental {
//        coroutines "enable"
//    }
//}